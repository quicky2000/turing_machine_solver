matrix:
  include:
    - os: linux
      sudo: required
      dist: jammy
      compiler: gcc
    - os: linux
      sudo: required
      dist: focal
      compiler: gcc
      env: DISTRIB_NAME=focal
#    - os: osx
#      osx_image: xcode14.2
#      env: DISTRIB_NAME=macos

language: cpp

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
# g++ 10 specific part
#-----------------------
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get -y install g++-10; fi
  - if [[ "$DISTRIB_NAME" == "focal" ]]; then sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9; fi
  - if [[ "$DISTRIB_NAME" == "focal" ]]; then sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 ; fi
  - if [[ "$DISTRIB_NAME" == "focal" ]]; then sudo update-alternatives --set gcc /usr/bin/gcc-10 ; fi
# End of g++ 10 specific part
#-----------------------
  - MY_LOCATION=`pwd`
  - echo $MY_LOCATION
  - mkdir ../repositories
  - cd ..
  - mv $MY_LOCATION repositories/turing_machine_solver
  - QUICKY_REPOSITORY=`pwd`/repositories
  - export QUICKY_REPOSITORY
  - MY_LOCATION=`pwd`
  - echo $MY_LOCATION
  - cd $MY_LOCATION/repositories
  - git clone https://github.com/quicky2000/quicky_tools.git
  - git clone https://github.com/quicky2000/quicky_exception.git
  - git clone https://github.com/quicky2000/quicky_utils.git
  - git clone https://github.com/quicky2000/combinatorics.git
  - cd $MY_LOCATION/repositories
  - cd quicky_tools/setup
  - . setup.sh
  - cd $MY_LOCATION
  - chmod a+x repositories/quicky_tools/bin/*
  - mkdir build
  - cd build

script:
# quicky_tools do not support CUDA
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then generate_makefile turing_machine_solver; make; fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then run_test.py $MY_LOCATION/repositories/turing_machine_solver/tests; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cd $MY_LOCATION ; mkdir cmake_build ; cd cmake_build ; fi
  - cmake $QUICKY_REPOSITORY/turing_machine_solver
  - make
  #  - run_test.py $MY_LOCATION/repositories/turing_machine_solver/tests; fi
#EOF
